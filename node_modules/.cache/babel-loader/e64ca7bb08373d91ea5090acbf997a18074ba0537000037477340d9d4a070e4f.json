{"ast":null,"code":"import _regeneratorRuntime from\"/home/user/reactjs-api-apps-main/food-nutrition/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/user/reactjs-api-apps-main/food-nutrition/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/user/reactjs-api-apps-main/food-nutrition/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// Author:    Build Rise Shine with Nyros (BRS)\n// Created:   11.05.2022\n// Library / Component: Home Page\n// Description: Main page  for the app\n// (c) Copyright by BRS Studio | Build Rise Shine.\nimport React,{useState,useEffect}from\"react\";import{Link,useSearchParams}from\"react-router-dom\";import{HttpPost}from\"../core/store/httpHelper\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var Home=function Home(){var _useSearchParams=useSearchParams(),_useSearchParams2=_slicedToArray(_useSearchParams,2),searchParams=_useSearchParams2[0],setSearchParams=_useSearchParams2[1];var query=searchParams.get(\"query\");var _useState=useState([]),_useState2=_slicedToArray(_useState,2),foodData=_useState2[0],setFoodData=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),noFoodFound=_useState4[0],setNoFoodFound=_useState4[1];var _useState5=useState(query||''),_useState6=_slicedToArray(_useState5,2),searchQuery=_useState6[0],setSearchQuery=_useState6[1];useEffect(function(){getNutritionDetails();// eslint-disable-next-line\n},[]);var getNutritionDetails=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var queryParams,response,_error$response,_error$response$data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;if(!searchQuery){_context.next=7;break;}queryParams={query:searchQuery};_context.next=5;return HttpPost(queryParams);case 5:response=_context.sent;setFoodData(response===null||response===void 0?void 0:response.foods);case 7:_context.next=13;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);setFoodData([]);setNoFoodFound(_context.t0===null||_context.t0===void 0?void 0:(_error$response=_context.t0.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message);case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function getNutritionDetails(){return _ref.apply(this,arguments);};}();var handleInputChange=function handleInputChange(e){setSearchParams({query:e.target.value});setSearchQuery(e.target.value);if(!e.target.value){setSearchParams('');setFoodData([]);}};var FoodNutritionInfo=function FoodNutritionInfo(){return foodData.map(function(e,i){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"img\",{alt:'',className:\"food-thumb\",src:e.photo.thumb})}),/*#__PURE__*/_jsx(\"td\",{children:e.serving_qty}),/*#__PURE__*/_jsx(\"td\",{children:e.serving_unit}),/*#__PURE__*/_jsx(\"td\",{children:e.food_name}),/*#__PURE__*/_jsx(\"td\",{children:e.nf_calories}),/*#__PURE__*/_jsx(\"td\",{children:e.serving_weight_grams})]},i);});};var getCalorieContent=function getCalorieContent(){if(!foodData.length){return null;}if(foodData.length>1){var data=foodData.reduce(function(k,v){return k+v.nf_calories;},0);return Math.round(data);}else{var _foodData$;return(_foodData$=foodData[0])===null||_foodData$===void 0?void 0:_foodData$.nf_calories;}};var getFatContent=function getFatContent(){if(!foodData.length){return null;}if(foodData.length>1){var data=foodData.reduce(function(k,v){return k+v.nf_total_fat;},0);return data.toFixed(2);}else{var _foodData$2;return(_foodData$2=foodData[0])===null||_foodData$2===void 0?void 0:_foodData$2.nf_total_fat;}};var getCholesterolContent=function getCholesterolContent(){if(!foodData.length){return null;}if(foodData.length>1){var data=foodData.reduce(function(k,v){return k+v.nf_cholesterol;},0);return data.toFixed(0);}else{var _foodData$3;return(_foodData$3=foodData[0])===null||_foodData$3===void 0?void 0:_foodData$3.nf_cholesterol;}};var getSodiumContent=function getSodiumContent(){if(!foodData.length){return null;}if(foodData.length>1){var data=foodData.reduce(function(k,v){return k+v.nf_sodium;},0);return data.toFixed(0);}else{var _foodData$4;return(_foodData$4=foodData[0])===null||_foodData$4===void 0?void 0:_foodData$4.nf_sodium;}};var getPotassiumContent=function getPotassiumContent(){if(!foodData.length){return null;}if(foodData.length>1){var data=foodData.reduce(function(k,v){return k+v.nf_potassium;},0);return data.toFixed(0);}else{var _foodData$5;return(_foodData$5=foodData[0])===null||_foodData$5===void 0?void 0:_foodData$5.nf_potassium;}};var getCarbHydContent=function getCarbHydContent(){if(!foodData.length){return null;}if(foodData.length>1){var data=foodData.reduce(function(k,v){return k+v.nf_total_carbohydrate;},0);return data.toFixed(0);}else{var _foodData$6;return(_foodData$6=foodData[0])===null||_foodData$6===void 0?void 0:_foodData$6.nf_total_carbohydrate;}};var getProteinContent=function getProteinContent(){if(!foodData.length){return null;}if(foodData.length>1){var data=foodData.reduce(function(k,v){return k+v.nf_protein;},0);return data.toFixed(1);}else{var _foodData$7;return(_foodData$7=foodData[0])===null||_foodData$7===void 0?void 0:_foodData$7.nf_protein;}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"row mx-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col col-8 mt-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col col-12 mt-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"input-group mb-3\",children:/*#__PURE__*/_jsx(\"textarea\",{value:searchQuery,rows:2,onChange:handleInputChange,type:\"text\",className:\"form-control shadow-none\",autoFocus:true})}),/*#__PURE__*/_jsxs(\"p\",{className:\"query mb-0\",children:[\"Enter a query like \",/*#__PURE__*/_jsx(Link,{target:\"_blank\",to:'/?query=1+cup+mashed+potatoes',children:\"\\\"1 cup mashed potatoes\\\"\"}),\" or \",/*#__PURE__*/_jsx(Link,{target:\"_blank\",to:'/?query=1+cup+mashed+potatoes+and+2+tbsp+gravy',children:\"\\\"1 cup mashed potatoes and 2 tbsp gravy\\\"\"}),\" to see how it works.\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col col-12 mt-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"input-group mb-3\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-warning\",onClick:getNutritionDetails,children:\"Calculate Foods\"})}),noFoodFound&&/*#__PURE__*/_jsx(\"h5\",{className:\"text-danger\",children:noFoodFound})]}),/*#__PURE__*/_jsx(\"div\",{className:\"col col-12 mt-4\",children:!!foodData.length&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"col col-8 mt-4\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table w-100\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{scope:\"col\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Qty\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Unit\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Food\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Calorie\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Weight\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsx(FoodNutritionInfo,{})})]})})})})]})}),!!foodData.length&&/*#__PURE__*/_jsx(\"div\",{className:\"col col-4 mt-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"nutrition-facts p-3\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"fw-bold f-border\",children:\"Nutrition Facts\"}),/*#__PURE__*/_jsx(\"div\",{className:\"w-100\",children:/*#__PURE__*/_jsx(\"p\",{className:\"fw-bold f-border-amt border border-3 border-top-0 border-start-0 border-end-0 m-0\",children:\"Amount per serving\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-100\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"fw-bold w-50 d-inline\",children:[\"Calories: \",/*#__PURE__*/_jsx(\"span\",{children:getCalorieContent()})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"fw-bold w-50 d-inline float-end d-none\",children:[\"Calories from fat: \",/*#__PURE__*/_jsx(\"span\",{children:\"7\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"fw-bold w-50 d-inline\",children:[\"Total Fat: \",/*#__PURE__*/_jsxs(\"span\",{children:[getFatContent(),\"g\"]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"w-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"fw-bold w-50 d-inline\",children:[\"Cholesterol: \",/*#__PURE__*/_jsxs(\"span\",{children:[getCholesterolContent(),\"mg\"]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"w-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"fw-bold w-50 d-inline\",children:[\"Sodium: \",/*#__PURE__*/_jsxs(\"span\",{children:[getSodiumContent(),\"mg\"]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"w-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"fw-bold w-50 d-inline\",children:[\"Potasium: \",/*#__PURE__*/_jsxs(\"span\",{children:[getPotassiumContent(),\"mg\"]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"w-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"fw-bold w-50 d-inline\",children:[\"Total Carbohydrates: \",/*#__PURE__*/_jsxs(\"span\",{children:[getCarbHydContent(),\"mg\"]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"w-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"fw-bold w-50 d-inline\",children:[\"Protein: \",/*#__PURE__*/_jsxs(\"span\",{children:[getProteinContent(),\"g\"]})]})})]})})]})});};","map":{"version":3,"names":["React","useState","useEffect","Link","useSearchParams","HttpPost","Home","searchParams","setSearchParams","query","get","foodData","setFoodData","noFoodFound","setNoFoodFound","searchQuery","setSearchQuery","getNutritionDetails","queryParams","response","foods","data","message","handleInputChange","e","target","value","FoodNutritionInfo","map","i","photo","thumb","serving_qty","serving_unit","food_name","nf_calories","serving_weight_grams","getCalorieContent","length","reduce","k","v","Math","round","getFatContent","nf_total_fat","toFixed","getCholesterolContent","nf_cholesterol","getSodiumContent","nf_sodium","getPotassiumContent","nf_potassium","getCarbHydContent","nf_total_carbohydrate","getProteinContent","nf_protein"],"sources":["/home/user/reactjs-api-apps-main/food-nutrition/src/modules/Home.js"],"sourcesContent":["// Author:    Build Rise Shine with Nyros (BRS)\n// Created:   11.05.2022\n// Library / Component: Home Page\n// Description: Main page  for the app\n// (c) Copyright by BRS Studio | Build Rise Shine.\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useSearchParams } from \"react-router-dom\"\nimport { HttpPost } from \"../core/store/httpHelper\";\n\nexport const Home = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  let query = searchParams.get(\"query\");\n  const [foodData, setFoodData] = useState([]);\n  const [noFoodFound, setNoFoodFound] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(query || '');\n\n  useEffect(() => {\n    getNutritionDetails();\n    // eslint-disable-next-line\n  }, [])\n\n  const getNutritionDetails = async() => {\n    try {\n      if(searchQuery) {\n        const queryParams = { query: searchQuery}\n        const response = await HttpPost(queryParams);\n        setFoodData(response?.foods);\n      }\n    } catch (error) {\n      setFoodData([]);\n      setNoFoodFound(error?.response?.data?.message);\n    }\n  }\n\n  const handleInputChange = (e) => {\n    setSearchParams({query: e.target.value});\n    setSearchQuery(e.target.value);\n    if(!e.target.value) {\n      setSearchParams('');\n      setFoodData([]);\n    }\n  }\n\n  const FoodNutritionInfo = () => {\n    return (\n      foodData.map((e, i) => {\n        return (\n          <tr key={i}>\n            <td><img alt={''} className=\"food-thumb\" src={e.photo.thumb}/></td>\n            <td>{e.serving_qty}</td>\n            <td>{e.serving_unit}</td>\n            <td>{e.food_name}</td>\n            <td>{e.nf_calories}</td>\n            <td>{e.serving_weight_grams}</td>\n          </tr>\n        )\n      })\n    )\n  }\n\n  const getCalorieContent = () => {\n    if(!foodData.length) { return null; }\n\n    if(foodData.length > 1) {\n      let data = foodData.reduce((k, v) => k + v.nf_calories, 0);\n      return Math.round(data);\n    } else {\n      return foodData[0]?.nf_calories;\n    }\n  }\n\n  const getFatContent = () => {\n    if(!foodData.length) { return null; }\n\n    if(foodData.length > 1) {\n      let data = foodData.reduce((k, v) => k + v.nf_total_fat, 0);\n      return data.toFixed(2);\n    } else {\n      return foodData[0]?.nf_total_fat;\n    }\n  }\n\n  const getCholesterolContent = () => {\n    if(!foodData.length) { return null; }\n\n    if(foodData.length > 1) {\n      let data = foodData.reduce((k, v) => k + v.nf_cholesterol, 0);\n      return data.toFixed(0);\n    } else {\n      return foodData[0]?.nf_cholesterol;\n    }\n  }\n\n  const getSodiumContent = () => {\n    if(!foodData.length) { return null; }\n\n    if(foodData.length > 1) {\n      let data = foodData.reduce((k, v) => k + v.nf_sodium, 0);\n      return data.toFixed(0);\n    } else {\n      return foodData[0]?.nf_sodium;\n    }\n  }\n\n  const getPotassiumContent = () => {\n    if(!foodData.length) { return null; }\n\n    if(foodData.length > 1) {\n      let data = foodData.reduce((k, v) => k + v.nf_potassium, 0);\n      return data.toFixed(0);\n    } else {\n      return foodData[0]?.nf_potassium;\n    }\n  }\n\n  const getCarbHydContent = () => {\n    if(!foodData.length) { return null; }\n\n    if(foodData.length > 1) {\n      let data = foodData.reduce((k, v) => k + v.nf_total_carbohydrate, 0);\n      return data.toFixed(0);\n    } else {\n      return foodData[0]?.nf_total_carbohydrate;\n    }\n  }\n\n  const getProteinContent = () => {\n    if(!foodData.length) { return null; }\n\n    if(foodData.length > 1) {\n      let data = foodData.reduce((k, v) => k + v.nf_protein, 0);\n      return data.toFixed(1);\n    } else {\n      return foodData[0]?.nf_protein;\n    }\n  }\n\n  return (\n    <>\n      <div className=\"row mx-4\">\n        <div className=\"col col-8 mt-4\">\n          <div className=\"row\">\n            <div className=\"col col-12 mt-4\">\n              <div className=\"input-group mb-3\">\n                <textarea value={searchQuery} rows={2} onChange={handleInputChange} type=\"text\" className=\"form-control shadow-none\" autoFocus />\n              </div>\n              <p className=\"query mb-0\">Enter a query like <Link target=\"_blank\" to={'/?query=1+cup+mashed+potatoes'}>\"1 cup mashed potatoes\"</Link> or <Link target=\"_blank\" to={'/?query=1+cup+mashed+potatoes+and+2+tbsp+gravy'}>\"1 cup mashed potatoes and 2 tbsp gravy\"</Link> to see how it works.</p>\n            </div>\n            <div className=\"col col-12 mt-4\">\n              <div className=\"input-group mb-3\">\n                <button className=\"btn btn-warning\" onClick={getNutritionDetails}>Calculate Foods</button>\n              </div>\n              {noFoodFound && <h5 className='text-danger'>{noFoodFound}</h5>}\n            </div>\n            <div className=\"col col-12 mt-4\">\n              {!!foodData.length &&\n                <>\n                  <div className=\"col col-8 mt-4\">\n                    <table className=\"table w-100\">\n                      <thead>\n                        <tr>\n                          <th scope=\"col\"></th>\n                          <th scope=\"col\">Qty</th>\n                          <th scope=\"col\">Unit</th>\n                          <th scope=\"col\">Food</th>\n                          <th scope=\"col\">Calorie</th>\n                          <th scope=\"col\">Weight</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <FoodNutritionInfo />\n                      </tbody>\n                    </table>\n                  </div>\n                </>\n              }\n            </div>\n          </div>\n        </div>\n        {!!foodData.length &&\n          <div className=\"col col-4 mt-4\">\n            <div className=\"nutrition-facts p-3\">\n              <h2 className=\"fw-bold f-border\">Nutrition Facts</h2>\n              <div className=\"w-100\">\n                <p className=\"fw-bold f-border-amt border border-3 border-top-0 border-start-0 border-end-0 m-0\">Amount per serving</p>\n              </div>\n              <div className=\"w-100\">\n                <div className=\"fw-bold w-50 d-inline\">Calories: <span>{getCalorieContent()}</span></div>\n                <div className=\"fw-bold w-50 d-inline float-end d-none\">Calories from fat: <span>7</span></div>\n              </div>\n              <div className=\"w-100\">\n                <div className=\"fw-bold w-50 d-inline\">Total Fat: <span>{getFatContent()}g</span></div>\n              </div>\n              <div className=\"w-100\">\n                <div className=\"fw-bold w-50 d-inline\">Cholesterol: <span>{getCholesterolContent()}mg</span></div>\n              </div>\n              <div className=\"w-100\">\n                <div className=\"fw-bold w-50 d-inline\">Sodium: <span>{getSodiumContent()}mg</span></div>\n              </div>\n              <div className=\"w-100\">\n                <div className=\"fw-bold w-50 d-inline\">Potasium: <span>{getPotassiumContent()}mg</span></div>\n              </div>\n              <div className=\"w-100\">\n                <div className=\"fw-bold w-50 d-inline\">Total Carbohydrates: <span>{getCarbHydContent()}mg</span></div>\n              </div>\n              <div className=\"w-100\">\n                <div className=\"fw-bold w-50 d-inline\">Protein: <span>{getProteinContent()}g</span></div>\n              </div>\n            </div>\n          </div>\n        }\n      </div>\n    </>\n  )\n}\n"],"mappings":"+ZAAA;AACA;AACA;AACA;AACA;AAEA,MAAOA,MAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,IAAI,CAAEC,eAAe,KAAQ,kBAAkB,CACxD,OAASC,QAAQ,KAAQ,0BAA0B,CAAC,6IAEpD,MAAO,IAAMC,KAAI,CAAG,QAAPA,KAAI,EAAS,CACxB,qBAAwCF,eAAe,EAAE,sDAAlDG,YAAY,sBAAEC,eAAe,sBACpC,GAAIC,MAAK,CAAGF,YAAY,CAACG,GAAG,CAAC,OAAO,CAAC,CACrC,cAAgCT,QAAQ,CAAC,EAAE,CAAC,wCAArCU,QAAQ,eAAEC,WAAW,eAC5B,eAAsCX,QAAQ,CAAC,IAAI,CAAC,yCAA7CY,WAAW,eAAEC,cAAc,eAClC,eAAsCb,QAAQ,CAACQ,KAAK,EAAI,EAAE,CAAC,yCAApDM,WAAW,eAAEC,cAAc,eAElCd,SAAS,CAAC,UAAM,CACde,mBAAmB,EAAE,CACrB;AACF,CAAC,CAAE,EAAE,CAAC,CAEN,GAAMA,oBAAmB,4FAAG,uNAErBF,WAAW,yBACNG,WAAW,CAAG,CAAET,KAAK,CAAEM,WAAW,CAAC,uBAClBV,SAAQ,CAACa,WAAW,CAAC,QAAtCC,QAAQ,eACdP,WAAW,CAACO,QAAQ,SAARA,QAAQ,iBAARA,QAAQ,CAAEC,KAAK,CAAC,CAAC,sFAG/BR,WAAW,CAAC,EAAE,CAAC,CACfE,cAAc,kEAAC,YAAOK,QAAQ,gEAAf,gBAAiBE,IAAI,+CAArB,qBAAuBC,OAAO,CAAC,CAAC,oEAElD,kBAXKL,oBAAmB,0CAWxB,CAED,GAAMM,kBAAiB,CAAG,QAApBA,kBAAiB,CAAIC,CAAC,CAAK,CAC/BhB,eAAe,CAAC,CAACC,KAAK,CAAEe,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CACxCV,cAAc,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAC9B,GAAG,CAACF,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE,CAClBlB,eAAe,CAAC,EAAE,CAAC,CACnBI,WAAW,CAAC,EAAE,CAAC,CACjB,CACF,CAAC,CAED,GAAMe,kBAAiB,CAAG,QAApBA,kBAAiB,EAAS,CAC9B,MACEhB,SAAQ,CAACiB,GAAG,CAAC,SAACJ,CAAC,CAAEK,CAAC,CAAK,CACrB,mBACE,mCACE,iCAAI,YAAK,GAAG,CAAE,EAAG,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,CAAEL,CAAC,CAACM,KAAK,CAACC,KAAM,EAAE,EAAK,cACnE,oBAAKP,CAAC,CAACQ,WAAW,EAAM,cACxB,oBAAKR,CAAC,CAACS,YAAY,EAAM,cACzB,oBAAKT,CAAC,CAACU,SAAS,EAAM,cACtB,oBAAKV,CAAC,CAACW,WAAW,EAAM,cACxB,oBAAKX,CAAC,CAACY,oBAAoB,EAAM,GAN1BP,CAAC,CAOL,CAET,CAAC,CAAC,CAEN,CAAC,CAED,GAAMQ,kBAAiB,CAAG,QAApBA,kBAAiB,EAAS,CAC9B,GAAG,CAAC1B,QAAQ,CAAC2B,MAAM,CAAE,CAAE,MAAO,KAAI,CAAE,CAEpC,GAAG3B,QAAQ,CAAC2B,MAAM,CAAG,CAAC,CAAE,CACtB,GAAIjB,KAAI,CAAGV,QAAQ,CAAC4B,MAAM,CAAC,SAACC,CAAC,CAAEC,CAAC,QAAKD,EAAC,CAAGC,CAAC,CAACN,WAAW,GAAE,CAAC,CAAC,CAC1D,MAAOO,KAAI,CAACC,KAAK,CAACtB,IAAI,CAAC,CACzB,CAAC,IAAM,gBACL,kBAAOV,QAAQ,CAAC,CAAC,CAAC,qCAAX,WAAawB,WAAW,CACjC,CACF,CAAC,CAED,GAAMS,cAAa,CAAG,QAAhBA,cAAa,EAAS,CAC1B,GAAG,CAACjC,QAAQ,CAAC2B,MAAM,CAAE,CAAE,MAAO,KAAI,CAAE,CAEpC,GAAG3B,QAAQ,CAAC2B,MAAM,CAAG,CAAC,CAAE,CACtB,GAAIjB,KAAI,CAAGV,QAAQ,CAAC4B,MAAM,CAAC,SAACC,CAAC,CAAEC,CAAC,QAAKD,EAAC,CAAGC,CAAC,CAACI,YAAY,GAAE,CAAC,CAAC,CAC3D,MAAOxB,KAAI,CAACyB,OAAO,CAAC,CAAC,CAAC,CACxB,CAAC,IAAM,iBACL,mBAAOnC,QAAQ,CAAC,CAAC,CAAC,sCAAX,YAAakC,YAAY,CAClC,CACF,CAAC,CAED,GAAME,sBAAqB,CAAG,QAAxBA,sBAAqB,EAAS,CAClC,GAAG,CAACpC,QAAQ,CAAC2B,MAAM,CAAE,CAAE,MAAO,KAAI,CAAE,CAEpC,GAAG3B,QAAQ,CAAC2B,MAAM,CAAG,CAAC,CAAE,CACtB,GAAIjB,KAAI,CAAGV,QAAQ,CAAC4B,MAAM,CAAC,SAACC,CAAC,CAAEC,CAAC,QAAKD,EAAC,CAAGC,CAAC,CAACO,cAAc,GAAE,CAAC,CAAC,CAC7D,MAAO3B,KAAI,CAACyB,OAAO,CAAC,CAAC,CAAC,CACxB,CAAC,IAAM,iBACL,mBAAOnC,QAAQ,CAAC,CAAC,CAAC,sCAAX,YAAaqC,cAAc,CACpC,CACF,CAAC,CAED,GAAMC,iBAAgB,CAAG,QAAnBA,iBAAgB,EAAS,CAC7B,GAAG,CAACtC,QAAQ,CAAC2B,MAAM,CAAE,CAAE,MAAO,KAAI,CAAE,CAEpC,GAAG3B,QAAQ,CAAC2B,MAAM,CAAG,CAAC,CAAE,CACtB,GAAIjB,KAAI,CAAGV,QAAQ,CAAC4B,MAAM,CAAC,SAACC,CAAC,CAAEC,CAAC,QAAKD,EAAC,CAAGC,CAAC,CAACS,SAAS,GAAE,CAAC,CAAC,CACxD,MAAO7B,KAAI,CAACyB,OAAO,CAAC,CAAC,CAAC,CACxB,CAAC,IAAM,iBACL,mBAAOnC,QAAQ,CAAC,CAAC,CAAC,sCAAX,YAAauC,SAAS,CAC/B,CACF,CAAC,CAED,GAAMC,oBAAmB,CAAG,QAAtBA,oBAAmB,EAAS,CAChC,GAAG,CAACxC,QAAQ,CAAC2B,MAAM,CAAE,CAAE,MAAO,KAAI,CAAE,CAEpC,GAAG3B,QAAQ,CAAC2B,MAAM,CAAG,CAAC,CAAE,CACtB,GAAIjB,KAAI,CAAGV,QAAQ,CAAC4B,MAAM,CAAC,SAACC,CAAC,CAAEC,CAAC,QAAKD,EAAC,CAAGC,CAAC,CAACW,YAAY,GAAE,CAAC,CAAC,CAC3D,MAAO/B,KAAI,CAACyB,OAAO,CAAC,CAAC,CAAC,CACxB,CAAC,IAAM,iBACL,mBAAOnC,QAAQ,CAAC,CAAC,CAAC,sCAAX,YAAayC,YAAY,CAClC,CACF,CAAC,CAED,GAAMC,kBAAiB,CAAG,QAApBA,kBAAiB,EAAS,CAC9B,GAAG,CAAC1C,QAAQ,CAAC2B,MAAM,CAAE,CAAE,MAAO,KAAI,CAAE,CAEpC,GAAG3B,QAAQ,CAAC2B,MAAM,CAAG,CAAC,CAAE,CACtB,GAAIjB,KAAI,CAAGV,QAAQ,CAAC4B,MAAM,CAAC,SAACC,CAAC,CAAEC,CAAC,QAAKD,EAAC,CAAGC,CAAC,CAACa,qBAAqB,GAAE,CAAC,CAAC,CACpE,MAAOjC,KAAI,CAACyB,OAAO,CAAC,CAAC,CAAC,CACxB,CAAC,IAAM,iBACL,mBAAOnC,QAAQ,CAAC,CAAC,CAAC,sCAAX,YAAa2C,qBAAqB,CAC3C,CACF,CAAC,CAED,GAAMC,kBAAiB,CAAG,QAApBA,kBAAiB,EAAS,CAC9B,GAAG,CAAC5C,QAAQ,CAAC2B,MAAM,CAAE,CAAE,MAAO,KAAI,CAAE,CAEpC,GAAG3B,QAAQ,CAAC2B,MAAM,CAAG,CAAC,CAAE,CACtB,GAAIjB,KAAI,CAAGV,QAAQ,CAAC4B,MAAM,CAAC,SAACC,CAAC,CAAEC,CAAC,QAAKD,EAAC,CAAGC,CAAC,CAACe,UAAU,GAAE,CAAC,CAAC,CACzD,MAAOnC,KAAI,CAACyB,OAAO,CAAC,CAAC,CAAC,CACxB,CAAC,IAAM,iBACL,mBAAOnC,QAAQ,CAAC,CAAC,CAAC,sCAAX,YAAa6C,UAAU,CAChC,CACF,CAAC,CAED,mBACE,sCACE,aAAK,SAAS,CAAC,UAAU,wBACvB,YAAK,SAAS,CAAC,gBAAgB,uBAC7B,aAAK,SAAS,CAAC,KAAK,wBAClB,aAAK,SAAS,CAAC,iBAAiB,wBAC9B,YAAK,SAAS,CAAC,kBAAkB,uBAC/B,iBAAU,KAAK,CAAEzC,WAAY,CAAC,IAAI,CAAE,CAAE,CAAC,QAAQ,CAAEQ,iBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,0BAA0B,CAAC,SAAS,OAAG,EAC7H,cACN,WAAG,SAAS,CAAC,YAAY,8CAAoB,KAAC,IAAI,EAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAE,+BAAgC,uCAA+B,qBAAI,KAAC,IAAI,EAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAE,gDAAiD,wDAAgD,2BAAyB,GAC1R,cACN,aAAK,SAAS,CAAC,iBAAiB,wBAC9B,YAAK,SAAS,CAAC,kBAAkB,uBAC/B,eAAQ,SAAS,CAAC,iBAAiB,CAAC,OAAO,CAAEN,mBAAoB,6BAAyB,EACtF,CACLJ,WAAW,eAAI,WAAI,SAAS,CAAC,aAAa,UAAEA,WAAW,EAAM,GAC1D,cACN,YAAK,SAAS,CAAC,iBAAiB,UAC7B,CAAC,CAACF,QAAQ,CAAC2B,MAAM,eAChB,sCACE,YAAK,SAAS,CAAC,gBAAgB,uBAC7B,eAAO,SAAS,CAAC,aAAa,wBAC5B,oCACE,mCACE,WAAI,KAAK,CAAC,KAAK,EAAM,cACrB,WAAI,KAAK,CAAC,KAAK,iBAAS,cACxB,WAAI,KAAK,CAAC,KAAK,kBAAU,cACzB,WAAI,KAAK,CAAC,KAAK,kBAAU,cACzB,WAAI,KAAK,CAAC,KAAK,qBAAa,cAC5B,WAAI,KAAK,CAAC,KAAK,oBAAY,GACxB,EACC,cACR,oCACE,KAAC,iBAAiB,IAAG,EACf,GACF,EACJ,EACL,EAED,GACF,EACF,CACL,CAAC,CAAC3B,QAAQ,CAAC2B,MAAM,eAChB,YAAK,SAAS,CAAC,gBAAgB,uBAC7B,aAAK,SAAS,CAAC,qBAAqB,wBAClC,WAAI,SAAS,CAAC,kBAAkB,6BAAqB,cACrD,YAAK,SAAS,CAAC,OAAO,uBACpB,UAAG,SAAS,CAAC,mFAAmF,gCAAuB,EACnH,cACN,aAAK,SAAS,CAAC,OAAO,wBACpB,aAAK,SAAS,CAAC,uBAAuB,qCAAW,sBAAOD,iBAAiB,EAAE,EAAQ,GAAM,cACzF,aAAK,SAAS,CAAC,wCAAwC,8CAAoB,2BAAc,GAAM,GAC3F,cACN,YAAK,SAAS,CAAC,OAAO,uBACpB,aAAK,SAAS,CAAC,uBAAuB,sCAAY,wBAAOO,aAAa,EAAE,OAAS,GAAM,EACnF,cACN,YAAK,SAAS,CAAC,OAAO,uBACpB,aAAK,SAAS,CAAC,uBAAuB,wCAAc,wBAAOG,qBAAqB,EAAE,QAAU,GAAM,EAC9F,cACN,YAAK,SAAS,CAAC,OAAO,uBACpB,aAAK,SAAS,CAAC,uBAAuB,mCAAS,wBAAOE,gBAAgB,EAAE,QAAU,GAAM,EACpF,cACN,YAAK,SAAS,CAAC,OAAO,uBACpB,aAAK,SAAS,CAAC,uBAAuB,qCAAW,wBAAOE,mBAAmB,EAAE,QAAU,GAAM,EACzF,cACN,YAAK,SAAS,CAAC,OAAO,uBACpB,aAAK,SAAS,CAAC,uBAAuB,gDAAsB,wBAAOE,iBAAiB,EAAE,QAAU,GAAM,EAClG,cACN,YAAK,SAAS,CAAC,OAAO,uBACpB,aAAK,SAAS,CAAC,uBAAuB,oCAAU,wBAAOE,iBAAiB,EAAE,OAAS,GAAM,EACrF,GACF,EACF,GAEJ,EACL,CAEP,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}